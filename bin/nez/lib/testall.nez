/**
 * Email Demo File
 */

FILE
	= EMPTY
	/ CHAR
	/ ANY
	/ BYTE
	/ CHARSET
	/ BYTESET
	/ STRING
	/ NONTERMINAL
	/ SEQUENCE
	/ CHOICE
	/ OPTION
	/ ZEROMORE
	/ ONEMORE
	/ AND
	/ NOT
	/ SCAN
	/ SYMBOL
	/ EXISTS
	/ EXISTSSYMBOL
	/ MATCH
	/ ISA
	/ IS
	/ BLOCK
	/ LOCAL

EMPTY = ''
CHAR = 'a'
ANY  = .
BYTE = 0x61  /* a */
CHARSET = [a-z]
BYTESET = 0xxxxxxx 
STRING  = 'abc'
NONTERMINAL = SEQUENCE
SEQUENCE = 'a' [0-9]
CHOICE   = 'abc' / 'a' / 'ab'

OPTION   = STRING? CHAR
ZEROMORE = 'ab'* / 'a'
ONEMORE  = 'ab'+ / 'a'
AND      = &STRING 'abc'
NOT      = !STRING SEQUENCE

example EMPTY ~d9834e aa
example CHAR ~fc3b311 aa
example ANY  ~fc3b311 aa
example BYTE ~fc3b311 aa  
example CHARSET ~fc3b311 aa
example BYTESET ~fc3b311 aa
example STRING ~605e55 abcd
example NONTERMINAL ~b4a3577 a9
example SEQUENCE ~b4a3577 a9
example CHOICE ~fc3b311 ab
example OPTION ~fc3b311 aa
example ZEROMORE ~46d896 abababa
example ONEMORE  ~fc3b311 aababab
example AND ~605e55 abcd
example NOT ~b4a3577 a9

/* Conditional Parsing */

ON	    = IF <on A IF> <on !A IF>

IF      = <if  A> 'a'
	    / <if !A> 'b'

example IF ~13a89dc b
example ON ~0481baf bab

/* Numeric Repetition */

SCAN    = <scan [0-9]> <repeat 'a'>

example SCAN ~7356c 3aaa

/* Symbol table */

NAME = [A-Za-z] [A-Za-z_0-9]*

SYMBOL = <symbol NAME>
EXISTS = <symbol NAME> <exists NAME> !<exists MATCH>
EXISTSSYMBOL = <symbol NAME> <exists NAME 'Apple'> !<exists NAME 'Orange'>

MATCH  = <symbol NAME> '/' <match NAME>
IS     = <symbol NAME> '/' <is NAME>
ISA    = (<symbol NAME> ','?)* '/' <isa NAME>

example SYMBOL ~9539deb Apple
example EXISTS ~9539de Apple
example EXISTSSYMBOL ~9539de Apple

example MATCH ~1d96fb6 Apple/AppleII
example IS    ~1d96fb  Apple/Apple
example ISA   ~21d5d6  Apple,Orange,Banana/Apple

BLOCK  = <block <symbol NAME>> !<exists NAME>
BLOCK2  = <symbol NAME> '/' <block <match NAME>>

LOCAL  = <local NAME <symbol NAME>> !<exists NAME>
LOCAL2  = <symbol NAME> <local NAME !<exists NAME>>

example BLOCK  ~9539de  Apple
example BLOCK2 ~1d96fb  Apple/Apple
example LOCAL  ~9539de  Apple
example LOCAL2 ~9539de  Apple

/* Bigger Sample */
	
example EMAIL ~c07595 mail@address.com

public EMAIL
        = USER '@' DOMAIN
USER
        = ([A-Za-z0-9] / '-')+ ('.' LOCAL)?
DOMAIN
        = SUBDOMAIN ('.' SUBDOMAIN)+
SUBDOMAIN
        = ([A-Za-z0-9] / '-')+

S
    = [ \t]
    
_
	= S*


/* Tree, Tree Operation */

NewTree = { NAME #Name }

example NewTree ~5c0f58 Apple2

NoTag = { NAME }
Replace = { NAME #Name `Apple` }

example NoTag ~dec077 Banana
example Replace ~fdb051 Banana

/* List,LeftPair,RightPair */

List
        = { $(Term) (',' S* $(Term))+ #List } / Term

LeftPair
        = Term {$left ',' S* $right(Term) #Pair }*

RightPair
        = { $left(Term) ',' S* $right(RightPair) #Pair } / Term

Term
        = { [A-Za-z0-9]+ #Term } S*

example List ~070f0a80 A,B,C,D

example LeftPair ~8b91eca A,B,C,D

example RightPair ~dec0e50 A,B,C,D


/* Mathematical */        

Math
	= Product {$left ( '+' #Add / '-' #Sub ) $right(Product) }*

Product
	= Value {$left ( '*' #Mul / '/' #Div / '%' #Mod ) $right(Value) }*

Value
	= { [0-9]+ #Int } _
	/ { [A-Za-z0-9_]+ #Variable } _
	/ '(' Math ')'

example Math ~6e97d13 1+2*3
example Math ~d0e1fdc 1*2+3 
example Math ~82ef86b 1+2-3 
example Math ~870539  1+2*3-4/5
example Math ~870539  1+(2*3)-(4/5)

