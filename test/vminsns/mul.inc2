(vmInstruction, needContext, triggerGC, tailCall)
mul : (JSValue, JSValue) -> JSValue
mul (v1, v2) {
  match (v1, v2) {
    case (Fixnum v1 && Fixnum v2) {
      cint n1 = FixnumToCint(v1);
      cint n2 = FixnumToCint(v2);
      if (Half_fixnum_range(n1) && Half_fixnum_range(n2)) {
        cint p = n1 * n2;
        return CintToFixnum(p);
      } else {
        cdouble d = n1 * n2;
        return CdoubleToNumber(d);
      }
    }
    case (Number v1 && Number v2) {
      cdouble x1 = numberToCdouble(v1);
      cdouble x2 = numberToCdouble(v2);
      return CdoubleToNumber(n1 * n2);
    }
    case (JSValue v1 && Number v2) {
      Number u1 = toNumber(v1);
      return mul(u1, v2);
    }
    case (Number v1 && JSValue v2) {
      Number u2 = toNumber(v2);
      return mul(v1, u2);
    }
    case (JSValue v1 && JSValue v2) {
      return Flonum_Nan;
    }
  }
}