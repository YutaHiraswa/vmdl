externC (needContext, triggerGC) init: void -> JSValue
externC (needContext, triggerGC) toString: JSValue -> String
externC (needContext, triggerGC) toFixnum: JSValue -> Fixnum
externC (needContext, triggerGC) toFlonum: JSValue -> Flonum
externC (needContext, triggerGC) toSpecial: JSValue -> Special
externC (needContext, triggerGC) toSimpleObject: JSValue -> SimpleObject
externC (needContext, triggerGC) toArray: JSValue -> Array
externC (needContext, triggerGC) toFunction: JSValue -> Function
externC (needContext, triggerGC) toBuiltin: JSValue -> Builtin
externC (needContext, triggerGC) toIterator: JSValue -> Iterator
externC (needContext, triggerGC) toRegexp: JSValue -> Regexp
ins : JSValue -> JSValue
ins (v1) {
  JSValue ndv0 = init();
  top: match (v1) {
    case (String v1) {
      if(true) { ndv0 <- toString(); } else {}
      if(true) { ndv0 <- toFixnum(); } else {}
      if(true) { ndv0 <- toFlonum(); } else {}
      if(true) { ndv0 <- toSpecial(); } else {}
      if(true) { ndv0 <- toSimpleObject(); } else {}
      if(true) { ndv0 <- toArray(); } else {}
      if(true) { ndv0 <- toFunction(); } else {}
      if(true) { ndv0 <- toBuiltin(); } else {}
      if(true) { ndv0 <- toIterator(); } else {}
      if(true) { ndv0 <- toRegexp(); } else {}
      rematch top(v1);
    }
    case (Fixnum v1) {
      if(true) { ndv0 <- toString(); } else {}
      if(true) { ndv0 <- toFixnum(); } else {}
      if(true) { ndv0 <- toFlonum(); } else {}
      if(true) { ndv0 <- toSpecial(); } else {}
      if(true) { ndv0 <- toSimpleObject(); } else {}
      if(true) { ndv0 <- toArray(); } else {}
      if(true) { ndv0 <- toFunction(); } else {}
      if(true) { ndv0 <- toBuiltin(); } else {}
      if(true) { ndv0 <- toIterator(); } else {}
      if(true) { ndv0 <- toRegexp(); } else {}
      rematch top(v1);
    }
    case (Flonum v1) {
      if(true) { ndv0 <- toString(); } else {}
      if(true) { ndv0 <- toFixnum(); } else {}
      if(true) { ndv0 <- toFlonum(); } else {}
      if(true) { ndv0 <- toSpecial(); } else {}
      if(true) { ndv0 <- toSimpleObject(); } else {}
      if(true) { ndv0 <- toArray(); } else {}
      if(true) { ndv0 <- toFunction(); } else {}
      if(true) { ndv0 <- toBuiltin(); } else {}
      if(true) { ndv0 <- toIterator(); } else {}
      if(true) { ndv0 <- toRegexp(); } else {}
      rematch top(v1);
    }
    case (Special v1) {
      if(true) { ndv0 <- toString(); } else {}
      if(true) { ndv0 <- toFixnum(); } else {}
      if(true) { ndv0 <- toFlonum(); } else {}
      if(true) { ndv0 <- toSpecial(); } else {}
      if(true) { ndv0 <- toSimpleObject(); } else {}
      if(true) { ndv0 <- toArray(); } else {}
      if(true) { ndv0 <- toFunction(); } else {}
      if(true) { ndv0 <- toBuiltin(); } else {}
      if(true) { ndv0 <- toIterator(); } else {}
      if(true) { ndv0 <- toRegexp(); } else {}
      rematch top(v1);
    }
    case (SimpleObject v1) {
      if(true) { ndv0 <- toString(); } else {}
      if(true) { ndv0 <- toFixnum(); } else {}
      if(true) { ndv0 <- toFlonum(); } else {}
      if(true) { ndv0 <- toSpecial(); } else {}
      if(true) { ndv0 <- toSimpleObject(); } else {}
      if(true) { ndv0 <- toArray(); } else {}
      if(true) { ndv0 <- toFunction(); } else {}
      if(true) { ndv0 <- toBuiltin(); } else {}
      if(true) { ndv0 <- toIterator(); } else {}
      if(true) { ndv0 <- toRegexp(); } else {}
      rematch top(v1);
    }
    case (Array v1) {
      if(true) { ndv0 <- toString(); } else {}
      if(true) { ndv0 <- toFixnum(); } else {}
      if(true) { ndv0 <- toFlonum(); } else {}
      if(true) { ndv0 <- toSpecial(); } else {}
      if(true) { ndv0 <- toSimpleObject(); } else {}
      if(true) { ndv0 <- toArray(); } else {}
      if(true) { ndv0 <- toFunction(); } else {}
      if(true) { ndv0 <- toBuiltin(); } else {}
      if(true) { ndv0 <- toIterator(); } else {}
      if(true) { ndv0 <- toRegexp(); } else {}
      rematch top(v1);
    }
    case (Function v1) {
      if(true) { ndv0 <- toString(); } else {}
      if(true) { ndv0 <- toFixnum(); } else {}
      if(true) { ndv0 <- toFlonum(); } else {}
      if(true) { ndv0 <- toSpecial(); } else {}
      if(true) { ndv0 <- toSimpleObject(); } else {}
      if(true) { ndv0 <- toArray(); } else {}
      if(true) { ndv0 <- toFunction(); } else {}
      if(true) { ndv0 <- toBuiltin(); } else {}
      if(true) { ndv0 <- toIterator(); } else {}
      if(true) { ndv0 <- toRegexp(); } else {}
      rematch top(v1);
    }
    case (Builtin v1) {
      if(true) { ndv0 <- toString(); } else {}
      if(true) { ndv0 <- toFixnum(); } else {}
      if(true) { ndv0 <- toFlonum(); } else {}
      if(true) { ndv0 <- toSpecial(); } else {}
      if(true) { ndv0 <- toSimpleObject(); } else {}
      if(true) { ndv0 <- toArray(); } else {}
      if(true) { ndv0 <- toFunction(); } else {}
      if(true) { ndv0 <- toBuiltin(); } else {}
      if(true) { ndv0 <- toIterator(); } else {}
      if(true) { ndv0 <- toRegexp(); } else {}
      rematch top(v1);
    }
    case (Iterator v1) {
      if(true) { ndv0 <- toString(); } else {}
      if(true) { ndv0 <- toFixnum(); } else {}
      if(true) { ndv0 <- toFlonum(); } else {}
      if(true) { ndv0 <- toSpecial(); } else {}
      if(true) { ndv0 <- toSimpleObject(); } else {}
      if(true) { ndv0 <- toArray(); } else {}
      if(true) { ndv0 <- toFunction(); } else {}
      if(true) { ndv0 <- toBuiltin(); } else {}
      if(true) { ndv0 <- toIterator(); } else {}
      if(true) { ndv0 <- toRegexp(); } else {}
      rematch top(v1);
    }
    case (Regexp v1) {
      if(true) { ndv0 <- toString(); } else {}
      if(true) { ndv0 <- toFixnum(); } else {}
      if(true) { ndv0 <- toFlonum(); } else {}
      if(true) { ndv0 <- toSpecial(); } else {}
      if(true) { ndv0 <- toSimpleObject(); } else {}
      if(true) { ndv0 <- toArray(); } else {}
      if(true) { ndv0 <- toFunction(); } else {}
      if(true) { ndv0 <- toBuiltin(); } else {}
      if(true) { ndv0 <- toIterator(); } else {}
      if(true) { ndv0 <- toRegexp(); } else {}
      rematch top(v1);
    }
    case (true) {
      return v1;
    }
  }
}

