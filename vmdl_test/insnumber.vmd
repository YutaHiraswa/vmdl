externC (needContext, triggerGC) getNumber: void -> Number
externC (needContext, triggerGC) getFixnum: void -> Fixnum
externC (needContext, triggerGC) print1: void -> void
externC (needContext, triggerGC) print2: void -> void
externC (needContext, triggerGC) print3: void -> void
externC (needContext, triggerGC) print4: void -> void
ins : (JSValue, JSValue) -> JSValue
ins (v1, v2) {
  JSValue v3 = getFixnum();
  top: match (v1, v2){
    case (Fixnum v1 && Fixnum v2){
      v1 <- getNumber();
      v3 <- v1;
      rematch top(v1, v2);
    }
    case (Fixnum v1 && Flonum v2){
      print1();
      return v1;
    }
    case (Flonum v1 && Fixnum v2){
      print2();
      return v1;
    }
    case (Flonum v1 && Flonum v2){
      print3();
      return v1;
    }
    case (true) {
      print4();
      return v1;
    }
  }
}

