DEFLABEL(HEAD):
INSN_COUNT2(add,v1,v2);
/* [{Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=null, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=null, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=null, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=null, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=null, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=null, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=null, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=null, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Regexp, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=Regexp, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=NumberObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=SimpleObject, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=Flonum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=NumberObject, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=BooleanObject, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Flonum, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Iterator, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=String, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=Iterator, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=String, v2=Special, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=SimpleObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Special, v2=BooleanObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Fixnum, v2=Function, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Function, v2=Fixnum, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Builtin, v2=Array, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=Builtin, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=Array, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}, {Set_fp=void->void, Get_a=void->JSValue, Ret=void->void, Setarray=(JSValue,Subscript,JSValue)->void, Initialize_new_object=(JSValue,JSValue)->JSValue, New_normal_iterator=JSValue->JSValue, Setlocal=(cint,Subscript,JSValue)->void, Flonum_Nan=void->Flonum, Lcall_stack_push=void->void, Tailcall_function=(JSValue,cint,cint)->void, Isundefined=JSValue->JSValue, Flonum_NegInfinity=void->Flonum, Getarguments=(cint,Subscript)->JSValue, CdoubleToNumber=cdouble->Number, toBoolean=JSValue->JSValue, Getlocal=(cint,Subscript)->JSValue, FlonumToCint=Flonum->cint, Throw=void->void, Pophandler=void->void, IsFlonumNegInfinity=JSValue->cint, Set_sp=cint->void, CintToFixnum=cint->Fixnum, Get_err=void->JSValue, add=(JSValue,JSValue)->JSValue, FixnumToCint=Fixnum->cint, IsFlonumNan=JSValue->cint, toCdouble=JSValue->cdouble, SpecialToString=Special->String, SetArrayProp=(Array,JSValue,JSValue)->void, FIXNUM_EQ=(Fixnum,Fixnum)->cint, New_normal_function=Subscript->JSValue, Setglobal=(JSValue,JSValue)->void, NotImplemented=void->void, Isobject=JSValue->JSValue, CdoubleToFlonum=cdouble->Flonum, concat=(String,String)->String, Poplocal=void->void, Object_to_primitive_hint_number=JSObject->JSValue, Nop=void->void, Strcmp=(Top,Top)->cint, Not=JSValue->JSValue, Setarg=(cint,Subscript,JSValue)->void, Call_builtin=(JSValue,cint,cint,cint)->void, Newframe=cint->void, Ceil=cdouble->cdouble, JS_undefined=void->JSObject, Flonum_Infinity=void->Flonum, toNumber=JSValue->Number, SetObjectProp=(JSObject,JSValue,JSValue)->void, Half_fixnum_range=cint->cint, FIXNUM_LESSTHANEQ=(Fixnum,Fixnum)->cint, Call_function=(JSValue,cint,cint)->void, CintToNumber=cint->Number, IsNewSend=cint->cint, Get_globalobj=void->JSValue, Nextpropnameidx=JSValue->JSValue, Update_context=void->void, Setfl=cint->void, Fixnum_Zero=void->Fixnum, Localret=void->Displacement, FIXNUM_AND=(Fixnum,Fixnum)->Fixnum, Try_gc=void->void, IsFixnumZero=JSValue->cint, ObjectToString=JSValue->String, FixnumToCdouble=Fixnum->cdouble, String_to_cstr=String->Top, Instanceof=(JSValue,JSValue)->JSValue, toObject=JSValue->JSObject, getArrayProp=(Array,JSValue)->JSValue, Pushhandler=Displacement->void, Logexit=cstring->void, LogicalRightShift=cint->cint, Floor=cdouble->cdouble, Next_insn_incpc=void->void, FixnumToString=Fixnum->String, Save_context=void->void, getObjectProp=(JSObject,JSValue)->JSValue, FIXNUM_OR=(Fixnum,Fixnum)->Fixnum, Next_insn_noincpc=void->void, Jump=Displacement->void, Get_opcode=void->cint, IsFlonumInfinity=JSValue->cint, New_normal_object=void->JSObject, Get_global=JSValue->JSValue, FlonumToString=Flonum->String, Tailcall_builtin=(JSValue,cint,cint)->void, IsTailSend=cint->cint, Set_pc=void->void, Seta=JSValue->void, toString=JSValue->String, v1=StringObject, v2=StringObject, Makearguments=void->void, FIXNUM_LESSTHAN=(Fixnum,Fixnum)->cint, IsSend=cint->cint, Get_literal=cint->JSValue}] */
MATCH_HEAD_add_topAT104:
Ladd_topAT104_0:switch((unsigned int) get_tag(v1)){ // dispatch.DecisionDiagram$PTNode@550(4)
case T_GENERIC:
Ladd_topAT104_1:switch((unsigned int) get_tag(v2)){ // dispatch.DecisionDiagram$PTNode@41d(2)
case T_GENERIC:
Ladd_topAT104_2:{ // normal_iterator normal_simple_object dispatch.DecisionDiagram$Leaf@69
double u1_6 = toCdouble(v1);
double u2_7 = toCdouble(v2);
  regbase[r0] = CdoubleToNumber((u1_6+u2_7));
goto Ladd_EPILOGUE;
}
break;
case T_STRING:
case 3:
case 2:
case 1:
case T_FLONUM:
case T_SPECIAL:
case T_FIXNUM:
default:
Ladd_topAT104_3:{ // normal_string_object normal_fixnum dispatch.DecisionDiagram$Leaf@285
JSValue u1_4 = toString(v1);
{
JSValue tmp0 = u1_4;
JSValue tmp1 = v2;
v1 = tmp0;
v2 = tmp1;
goto MATCH_HEAD_add_topAT104;
}
}
break;
} // dispatch.DecisionDiagram$PTNode@41d
break;
case T_STRING:
case 3:
case 2:
case 1:
Ladd_topAT104_4:switch((unsigned int) get_tag(v2)){ // dispatch.DecisionDiagram$PTNode@d34(3)
case T_GENERIC:
Ladd_topAT104_5:{ // normal_flonum normal_iterator dispatch.DecisionDiagram$Leaf@16
JSValue u2_5 = toString(v2);
{
JSValue tmp0 = v1;
JSValue tmp1 = u2_5;
v1 = tmp0;
v2 = tmp1;
goto MATCH_HEAD_add_topAT104;
}
}
break;
case T_FLONUM:
case T_SPECIAL:
case T_FIXNUM:
default:
Ladd_topAT104_6:{ // normal_string normal_fixnum dispatch.DecisionDiagram$Leaf@ed2
JSValue s_2 = toString(v2);
{
JSValue tmp0 = v1;
JSValue tmp1 = s_2;
v1 = tmp0;
v2 = tmp1;
goto MATCH_HEAD_add_topAT104;
}
}
break;
case T_STRING:
case 3:
case 2:
case 1:
Ladd_topAT104_7:{ // normal_string normal_string dispatch.DecisionDiagram$Leaf@1aaa
  regbase[r0] = concat(v1, v2);
goto Ladd_EPILOGUE;
}
break;
} // dispatch.DecisionDiagram$PTNode@d34
break;
case T_FIXNUM:
default:
Ladd_topAT104_8:switch((unsigned int) get_tag(v2)){ // dispatch.DecisionDiagram$PTNode@173c(4)
case T_GENERIC:
goto Ladd_topAT104_5;
break;
case T_FLONUM:
case T_SPECIAL:
goto Ladd_topAT104_2;
break;
case T_STRING:
case 3:
case 2:
case 1:
Ladd_topAT104_9:{ // normal_fixnum normal_string dispatch.DecisionDiagram$Leaf@a53
JSValue s_3 = toString(v1);
{
JSValue tmp0 = s_3;
JSValue tmp1 = v2;
v1 = tmp0;
v2 = tmp1;
goto MATCH_HEAD_add_topAT104;
}
}
break;
case T_FIXNUM:
default:
Ladd_topAT104_10:{ // normal_fixnum normal_fixnum dispatch.DecisionDiagram$Leaf@1f98
int s_1 = (FixnumToCint(v1)+FixnumToCint(v2));
  regbase[r0] = CintToNumber(s_1);
goto Ladd_EPILOGUE;
}
break;
} // dispatch.DecisionDiagram$PTNode@173c
break;
case T_FLONUM:
case T_SPECIAL:
Ladd_topAT104_11:switch((unsigned int) get_tag(v2)){ // dispatch.DecisionDiagram$PTNode@1887(3)
case T_GENERIC:
goto Ladd_topAT104_5;
break;
case T_FLONUM:
case T_SPECIAL:
case T_FIXNUM:
default:
goto Ladd_topAT104_2;
break;
case T_STRING:
case 3:
case 2:
case 1:
goto Ladd_topAT104_9;
break;
} // dispatch.DecisionDiagram$PTNode@1887
break;
} // dispatch.DecisionDiagram$PTNode@550

MATCH_TAIL_add_topAT104: ;
Ladd_EPILOGUE: ;

